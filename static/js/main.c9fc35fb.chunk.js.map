{"version":3,"sources":["store/ModalContext.js","store/ContactContext.js","components/NewMessageForm/NewContactForm.js","components/ContactsList/ContactsList.js","components/Auth/Auth.js","serviceWorker.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","Provider","Consumer","ContactContext","ContactProvider","qs","require","NewContactForm","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","company","setCompany","_useState7","_useState8","givewayParticipant","setGivewayParticipant","_useState9","_useState10","sending","setSending","setShowModal","useContext","_useContext2","contactsList","setContactsList","_useState11","_useState12","teste","_useState13","_useState14","teste2","setTeste2","addContactsToList","addedContact","contactsArray","unshift","_handleSubmit2","asyncToGenerator","regenerator_default","a","mark","_callee","e","newItem","contact","message","wrap","_context","prev","next","stringify","preventDefault","Axios","post","sent","window","encodeURIComponent","data","giveawayNumber","open","concat","replace","stop","apply","this","arguments","react_default","createElement","Fragment","className","onClick","xmlns","width","height","viewBox","d","fill","autoComplete","onSubmit","_x","htmlFor","react_input_mask_default","value","type","mask","id","onChange","target","required","defaultChecked","checked","JSON","disabled","ContactsList","showModal","loading","setLoading","useEffect","_ref","contacts","get","componentDidMount","document","querySelector","style","overflowY","length","map","key","_id","_ref2","sendMessage","substr","NewMessageForm_NewContactForm","Auth","password","setPassword","localStorage","setItem","location","reload","alert","validatePassword","placeholder","toLocaleLowerCase","autoFocus","Boolean","hostname","match","ReactDOM","render","getItem","components_ContactsList_ContactsList","components_Auth_Auth","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9fc35fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport const ModalProvider = ModalContext.Provider;\r\nexport const ModalConsumer = ModalContext.Consumer;\r\nexport default ModalContext;","import React from 'react';\r\n\r\nconst ContactContext = React.createContext();\r\n\r\nexport const ContactProvider = ContactContext.Provider;\r\nexport const ContactConsumer = ContactContext.Consumer;\r\nexport default ContactContext;","import React, { useState, useContext } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport Axios from 'axios';\r\nimport ModalContext from '../../store/ModalContext';\r\nimport ContactContext from '../../store/ContactContext';\r\nimport './NewContactForm.css';\r\nvar qs = require('qs');\r\n\r\nfunction NewContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [givewayParticipant, setGivewayParticipant] = useState(true);\r\n  const [sending, setSending] = useState(false);\r\n  const { setShowModal } = useContext(ModalContext);\r\n  const { contactsList, setContactsList } = useContext(ContactContext);\r\n  const [teste, setTeste] = useState({});\r\n  const [teste2, setTeste2] = useState({});\r\n\r\n  function addContactsToList(addedContact) {\r\n    const contactsArray = contactsList;\r\n    \r\n    contactsArray.unshift(addedContact);\r\n    \r\n    setContactsList(contactsArray);\r\n  }\r\n\r\n  async function _handleSubmit(e) {\r\n    const newItem = qs.stringify({ name, phone, company, givewayParticipant });\r\n    let contact = {};\r\n    let message = '';\r\n\r\n    e.preventDefault();\r\n\r\n    setSending(true);\r\n\r\n    setTeste2(newItem)\r\n\r\n    contact = await Axios.post('https://send-message-iv2.herokuapp.com/api/v1/contact', newItem)\r\n    \r\n    message = window.encodeURIComponent(\r\n      'Olá ' + contact.data.name + ',\\n\\n' +\r\n      'Agradecemos a sua visita em nosso Stand, foi um prazer recebê-lo!\\n' +\r\n      (givewayParticipant ? 'O seu número para participar do sorteio é: ' + contact.data.giveawayNumber + '. Boa Sorte!\\n' : '') + \r\n      'E conforme conversamos, segue o material sobre os Apps e soluções da iv2.\\n' +\r\n      'Easy Quality https://www.youtube.com/watch?v=-xYYd9CbCo4\\n' +\r\n      'Easy Project https://www.youtube.com/watch?v=jaeVf8NhJCY&t\\n' +\r\n      'Easy Calendar https://www.youtube.com/watch?v=VzMcqAoVGt0&t\\n' +\r\n      'Make it Easy https://www.youtube.com/watch?v=b3a3gfTEtpo&t\\n\\n' +\r\n      'Qualquer dúvida , estamos á disposição :)' +\r\n      '\\n\\nAbraço,\\nGrupo iv2'\r\n    );\r\n\r\n    addContactsToList(contact.data);\r\n    setName('');\r\n    setPhone('');\r\n    setCompany('');\r\n    setGivewayParticipant(true);\r\n    setSending(false);\r\n    setShowModal(false);\r\n\r\n    window.open(`https://api.whatsapp.com/send?phone=55${phone.replace(/[(,),\\-, ]/g, '')}&text=${message}`, '_system');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"close\" onClick={() => setShowModal(false)}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          </svg>\r\n        </div>\r\n        Novo contato 22\r\n      </div>\r\n\r\n      <form autoComplete=\"off\" onSubmit={_handleSubmit}>\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Telefone</label>\r\n            <InputMask value={phone} type=\"tel\" mask=\"(99) 9 9999-9999\" id=\"phone\" name=\"phone\" onChange={e => setPhone(e.target.value)} required />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Nome</label>\r\n            <input value={name} type=\"text\" id=\"name\" name=\"name\" onChange={e => setName(e.target.value)} required />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"company\">Empresa</label>\r\n            <input value={company} type=\"text\" id=\"company\" name=\"company\" onChange={e => setCompany(e.target.value)} required />\r\n          </div>\r\n\r\n          <div className=\"form-group form-check\">\r\n            <label htmlFor=\"giveaway\" className=\"checkbox\">\r\n              <input type=\"checkbox\" name=\"giveway\" id=\"giveaway\" defaultChecked=\"true\" onChange={e => setGivewayParticipant(e.target.checked) } />\r\n              Quer participar do sorteio\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {JSON.stringify(teste2)}\r\n        -------------------------------------------------\r\n        {JSON.stringify(teste)}\r\n        \r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" disabled={sending}>\r\n            {sending ? 'agora vai...' : 'Enviar'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewContactForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport NewMessageForm from '../NewMessageForm/NewContactForm';\r\nimport { ModalProvider } from '../../store/ModalContext';\r\nimport { ContactProvider } from '../../store/ContactContext';\r\nimport './ContactsList.css';\r\n\r\nfunction ContactsList() {\r\n  const [contactsList, setContactsList] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const componentDidMount = async () => {\r\n      const contacts = await Axios.get('https://send-message-iv2.herokuapp.com/api/v1/contact');\r\n      \r\n      setLoading(false);\r\n      setContactsList(contacts.data);\r\n    }\r\n    \r\n    componentDidMount();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').style.overflowY = showModal ? 'hidden' : 'auto';\r\n  }, [showModal]);\r\n\r\n  function sendMessage({ name, phone, giveawayNumber, givewayParticipant }) {\r\n    let message = '';\r\n\r\n    message = window.encodeURIComponent(\r\n      'Olá ' + name + ',\\n\\n' +\r\n      'Agradecemos a sua visita em nosso Stand, foi um prazer recebê-lo!\\n' +\r\n      (givewayParticipant ? 'O seu número para participar do sorteio é: ' + giveawayNumber + '. Boa Sorte!\\n' : '') + \r\n      'E conforme conversamos, segue o material sobre os Apps e soluções da iv2.\\n' +\r\n      'Easy Quality https://www.youtube.com/watch?v=-xYYd9CbCo4\\n' +\r\n      'Easy Project https://www.youtube.com/watch?v=jaeVf8NhJCY&t\\n' +\r\n      'Easy Calendar https://www.youtube.com/watch?v=VzMcqAoVGt0&t\\n' +\r\n      'Make it Easy https://www.youtube.com/watch?v=b3a3gfTEtpo&t\\n\\n' +\r\n      'Qualquer dúvida , estamos á disposição :)' +\r\n      '\\n\\nAbraço,\\nGrupo iv2'\r\n    );\r\n\r\n    window.open(`https://api.whatsapp.com/send?phone=55${phone.replace(/[(,),\\-, ]/g, '')}&text=${message}`, '_blank');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header-list\">\r\n        {loading ? 'Carregando contatos...' : `Contatos (${contactsList.length})`}\r\n      </div>\r\n\r\n      <div className=\"contact-list\">\r\n        {\r\n          contactsList.map(contact => {\r\n            return (\r\n              <div className=\"contact-list-item\" key={contact._id} onClick={() => sendMessage(contact)}>\r\n                <div>\r\n                  <div className=\"contact-inital\">\r\n                    {\r\n                      contact.name.substr(0, 1)\r\n                    }\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"contact-info-container\">\r\n                  {contact.name}\r\n                  <div className=\"info\">{contact.company}</div>\r\n                  <div className=\"info phone\">{contact.phone}</div>\r\n                </div>\r\n                \r\n                {\r\n                  contact.givewayParticipant &&\r\n                  <div className=\"giveaway-number-container\">\r\n                    n° {contact.giveawayNumber}\r\n                  </div>\r\n                }\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <button type=\"button\" className=\"fab\" onClick={() => setShowModal(true)}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill=\"#fff\"/>\r\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n        </svg>\r\n      </button>\r\n\r\n      <ModalProvider value={{ setShowModal }}>\r\n        <div id=\"modalContainer\" onClick={e => e.target.id === 'modalContainer' && setShowModal(false)} className={'modal-container' + (showModal ? ' visible' : '')}>\r\n          <div className={'form-modal' + (showModal ? ' visible' : '')}>\r\n            <ContactProvider value={{ contactsList, setContactsList }}>\r\n              <NewMessageForm />\r\n            </ContactProvider>\r\n          </div>\r\n        </div>\r\n      </ModalProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsList;","import React, { useState } from 'react';\r\nimport './Auth.css';\r\n\r\nfunction Auth() {\r\n  const [password, setPassword] = useState('');\r\n\r\n  function validatePassword(e) {\r\n    e.preventDefault();\r\n\r\n    if (password === 'totvs@iv2') {\r\n      localStorage.setItem('password', password);\r\n      return window.location.reload();\r\n    }\r\n\r\n    return alert('Senha inválida');\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form onSubmit={e => validatePassword(e)}>\r\n        <input type=\"text\" name=\"password\" placeholder=\"Senha\" className=\"password-input\" onChange={e => setPassword(e.target.value.toLocaleLowerCase())} required autoFocus={true} />\r\n        <button type=\"submit\" className=\"password-submit\">Entrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/ContactsList/ContactsList';\r\nimport Auth from './components/Auth/Auth';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  localStorage.getItem('password') ? <App /> : <Auth />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}